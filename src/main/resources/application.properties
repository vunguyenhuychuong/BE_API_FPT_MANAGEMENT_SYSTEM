server.port=80
spring.datasource.url=jdbc:mysql://localhost:3306/tms
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/syllabusdb
#spring.datasource.password=mySyllabus112022$
#spring.datasource.url=jdbc:mysql://localhost:3306/fa_account_jwt
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.hibernate.ddl-auto=update
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=testsendmail0123@gmail.com
spring.mail.password=atghadxpjswxkgpe
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
##Redis
logging.level.org.springframework.cache=TRACE
spring.cache.type=redis
#### SWAGGER
springdoc.swagger-ui.path=/swagger-ui-custom.html
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
#### Brute force attack counter, you can also handle this through a generic database back configuration ###############
security.failedlogin.count=5
##AccessToken
##10min
app.jwtExpirationMs=6000000
##0min
#app.jwtExpirationMs=0
##RefreshToken
#30min
app.refreshTokenDurationMs=1800000
##0min
#app.refreshTokenDurationMs=0
spring.jpa.properties.javax.persistence.validation.mode=none
